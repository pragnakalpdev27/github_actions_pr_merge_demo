name: Django CI/CD

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m venv env
        source env/bin/activate
        pip install -r requirements.txt

  test:
    needs: build
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_DB: myproject
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://user:password@localhost:5432/myproject

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m venv env
        source env/bin/activate
        pip install -r requirements.txt

    - name: Run migrations
      run: |
        source env/bin/activate
        python manage.py migrate

    - name: Run tests
      run: |
        source env/bin/activate
        python manage.py test

  merge:
    needs: [build, test]
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.full_name == github.repository

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Merge pull request
      uses: peter-evans/merge-pull-request@v2
      with:
        commit-message: 'Automatically merged PR #${{ github.event.pull_request.number }}'
        github-token: ${{ secrets.GITHUB_TOKEN }}
        merge-method: squash

  deploy:
    needs: merge
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Sync files to the server
      run: |
        rsync -avz --exclude 'env' --exclude '.git' ./ username@remote_host:/path/to/remote/project

    - name: Restart server
      run: |
        ssh username@remote_host 'sudo systemctl restart myproject'
